options {
        #listen-on port 53 { 127.0.0.1; };
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        allow-query     { any; };

{% if ansible_fqdn == 'primary' %}
        allow-transfer { localhost; 10.0.15.12; };
{% else %}
        # we only transfer from primary to slave
        #allow-transfer { localhost; 10.0.15.12; };
{% endif %}

        /*
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable
           recursion.
         - If your recursive DNS server has a public IP address, you MUST enable access
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface
        */
        recursion no;

        dnssec-enable yes;
        dnssec-validation yes;
        dnssec-lookaside auto;

        /* Path to ISC DLV key */
        bindkeys-file "/etc/named.iscdlv.key";

        managed-keys-directory "/var/named/dynamic";

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "named.ca";
};

{% if ansible_fqdn == 'primary' %}
key "ddns-key" {
   algorithm HMAC-MD5;
   secret "43JQzgL3OhwFsm/ZiFFPzQ==";
};

zone "mydomain.com" IN {
        type master;
        file "mydomain.com.zone";

        #allow-update { none; };
        allow-update { key "ddns-key"; };
};
{% endif %}

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";
